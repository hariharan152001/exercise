import numpy as np
import tensorflow as tf
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
from tensorflow.keras.models import Sequential
sample_images = np.random.rand(100, 64, 64, 3)
sample_labels = np.random.randint(2, size=100) 
model = Sequential([Conv2D(32, (3, 3), activation='relu', input_shape=(64, 64, 3)),MaxPooling2D((2, 2)),Conv2D(64, (3, 3), activation='relu'),MaxPooling2D((2, 2)),Conv2D(128, (3, 3), activation='relu'),MaxPooling2D((2, 2)),Flatten(),Dense(128, activation='relu'),Dense(1, activation='sigmoid')])
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(sample_images, sample_labels, epochs=10, batch_size=32)
sample_traffic_image = np.random.rand(1, 64, 64, 3)
prediction = model.predict(sample_traffic_image)
print("Predicted Probability:", prediction)
