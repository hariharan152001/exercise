import numpy as np 
from keras.models import Sequential 
from keras.layers import Dense 
X_train = np.array([[0, 0], [0, 1], [1, 0], [1, 1]]) 
y_train = np.array([[0], [1], [1], [0]]) 
model = Sequential() 
model.add(Dense(1, input_dim=2, activation='relu')) # Hidden layer with 8 neurons model.add(Dense(1, activation='sigmoid')) # Output layer with 1 neuron 
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) 
model.fit(X_train, y_train, epochs=3, batch_size=4) 
loss, accuracy = model.evaluate(X_train, y_train) 
print(f"Loss: {loss}, Accuracy: {accuracy}") 
X_test = np.array([[0, 0], [0, 1], [1, 0], [1, 1]]) 
predictions = model.predict(X_test) 
print(predictions) 
for i in range(len(X_test)): 
    print(f"Input: {X_test[i]}, Predicted Output: {predictions[i]}")
